cmdhistory=[";; Switching to beans.mmanzi.utils.bean_tests namespace" "(map \#(str %1 \\".\\" %2)  {\\"subSources\\" \\"subTargets\\"} {\\"test\\" \\"test\\"})" "(map \#(str (first %1) \\".\\" (first %2))  {\\"subSources\\" \\"subTargets\\"} {\\"test\\" \\"test\\"})" "(map \#({(str (first %1) \\".\\" (first %2))\\n        (str (second %1) \\".\\" (second %2))})  {\\"subSources\\" \\"subTargets\\"} {\\"subName\\" \\"subTargetName\\"})" "(map \#({(str (first %1) \\".\\" (first %2))\\n        (str (last %1) \\".\\" (last %2))})  {\\"subSources\\" \\"subTargets\\"} {\\"subName\\" \\"subTargetName\\"})" "(zipmap (map \#(str \\"subSources\\") (keys {\\"subName\\" \\"subTargetName\\"}))\\n        (map \#(str \\"subTargets\\") (vals {\\"subName\\" \\"subTargetName\\"})))" "(zipmap (map \#(str \\"subSources\\") (key {\\"subName\\" \\"subTargetName\\"}))\\n        (map \#(str \\"subTargets\\") (val {\\"subName\\" \\"subTargetName\\"})))" "(zipmap (map \#(str \\"subSources\\") ({\\"subName\\" \\"subTargetName\\"} key))\\n        (map \#(str \\"subTargets\\") (val {\\"subName\\" \\"subTargetName\\"})))" "\=> (zipmap (map \#(str \\"subSources\\") ({\\"subName\\" \\"subTargetName\\"} key))\\n           (map \#(str \\"subTargets\\") ({\\"subName\\" \\"subTargetName\\"} val)))" "\=> (zipmap (map \#(str \\"subSources.\\" %) ({\\"subName\\" \\"subTargetName\\"} key))\\n           (map \#(str \\"subTargets.\\" %) ({\\"subName\\" \\"subTargetName\\"} val)))" "\=> (zipmap (map \#(str \\"subSources.\\" %) (key {\\"subName\\" \\"subTargetName\\"}))\\n           (map \#(str \\"subTargets.\\" %) (val {\\"subName\\" \\"subTargetName\\"})))" " (zipmap (map \#(str \\"subSources.\\" %) (key {\\"subName\\" \\"subTargetName\\"}))\\n           (map \#(str \\"subTargets.\\" %) (val {\\"subName\\" \\"subTargetName\\"})))" "(zipmap (map \#(str \\"subSources.\\" %) ({\\"subName\\" \\"subTargetName\\"} key))\\n           (map \#(str \\"subTargets.\\" %) ({\\"subName\\" \\"subTargetName\\"} val)))" "({\\"subName\\" \\"subTargetName\\"} val)" "(val {\\"subName\\" \\"subTargetName\\"})" "(vals {\\"subName\\" \\"subTargetName\\"})" " (zipmap (map \#(str \\"subSources.\\" %) (keys {\\"subName\\" \\"subTargetName\\"}))\\n           (map \#(str \\"subTargets.\\" %) (vals {\\"subName\\" \\"subTargetName\\"})))" "mappingFull" "(deftest copy-properties-in-map\!-tests\\n  (is (\= (let [t create-target\\n               t (copy-field-in-map\! sourcePropertyMap source0 t)]\\n           (get-f t \\"targetName\\")) \\"testName\\")))" "mappingFull" "(split-with \#(.contains % \\".\\") mappingFull)" "(split-at \#(.contains % \\".\\") mappingFull)" "(map \#(.contains % \\".\\") mappingFull)" "(map \#(.contains (first %) \\".\\") mappingFull)" "(split-with \#(.contains (first %) \\".\\") mappingFull)" "(split-at \#(.contains (first %) \\".\\") mappingFull)" "(partition \#(.contains (first %) \\".\\") mappingFull)" "(partition-by \#(.contains (first %) \\".\\") mappingFull)" "(into {} (partition-by \#(.contains (first %) \\".\\") mappingFull))" "(map \#(into {} %) (partition-by \#(.contains (first %) \\".\\") mappingFull))" "(filter \#(\= % 1) {1 \\"a\\" 1 \\"b\\" 3 \\"c\\"})" "(filter \#(\= % 1) {\\"1\\" \\"a\\" \\"1\\" \\"b\\" \\"3\\" \\"c\\"})" "(filter \#(\= % \\"1\\") {\\"1\\" \\"a\\" \\"1\\" \\"b\\" \\"3\\" \\"c\\"})" "(filter \#(\= (first %) \\"1\\") (vec {\\"1\\" \\"a\\" \\"1\\" \\"b\\" \\"3\\" \\"c\\"}))" "(filter \#(\= (first %) \\"1\\") (vec {\\"1.test\\" \\"a\\" \\"1.test2\\" \\"b\\" \\"3\\" \\"c\\"}))" ";; Switching to ch.exmachina.beans.swapper.beans-tests namespace" "(group-by even? [1 2 4 3 5 6])" "(let [{t false c true} (group-by even? [1 2 4 3 5 6])]\\n  t)" "(.split \\"t-s\\" \\"-\\")" "(first (.split \\"t-s\\" \\"-\\"))" "(first (first {\\"test\\" \\"test\\"}))" "(first (first {\\"testk\\" \\"test\\"}))" "(group-by \#(> (.indexOf (first %) \\".\\") 0) {\\"a\\" \\"b.c\\" \\"d\\" \\"e.f\\"})" "(group-by \#(> (.indexOf (first %) \\".\\") 0) (sort-by \#(> (.indexOf (first %) \\".\\") 0) {\\"a\\" \\"b.c\\" \\"d\\" \\"e.f\\"}))" "(group-by \#(> (.indexOf (first %) \\".\\") 0) (sort-by \#(> (.indexOf (first %) \\".\\") 0) {\\"a\\" \\"1\\" \\n                                                                                    \\"d.e\\" \\"1\\"\\n                                                                                    \\"de\\" \\"1\\"\\n                                                                                    \\"f.e\\" \\"1\\"}))" "(group-by \#(> (.indexOf (first %) \\".\\") 0)  {\\"a\\" \\"1\\" \\n                                                                                    \\"d.e\\" \\"1\\"\\n                                                                                    \\"de\\" \\"1\\"\\n                                                                                    \\"f.e\\" \\"1\\"})"]
eclipse.preferences.version=1
